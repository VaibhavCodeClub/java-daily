// Remove Palindromic Subsequences
/*
You are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.
A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.

A string is called palindrome if is one that reads the same backward as well as forward.
*/

public class leet1332 {
  public static void main(String[] args) {
    System.out.println(removePalindromeSub("abb"));
  }

  private static boolean isPalindrome(String s) {
    int start = 0, end = s.length() - 1;
    while (start < end)
      if (s.charAt(start) == s.charAt(end)) {
        end--;
        start++;
      } else
        return false;
    return true;
  }

  public static int removePalindromeSub(String s) {
    if (isPalindrome(s))
      return 1;
    else
      return 2;
  }

}
